{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/PresentationTheme.ts","webpack:///./src/app/presentation-theme/presentation-theme.component.css","webpack:///./src/app/presentation-theme/presentation-theme.component.html","webpack:///./src/app/presentation-theme/presentation-theme.component.ts","webpack:///./src/app/presentation/presentation.component.css","webpack:///./src/app/presentation/presentation.component.html","webpack:///./src/app/presentation/presentation.component.ts","webpack:///./src/app/providers/presentation-theme-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <a routerLink=\\\"/presentation\\\" routerLinkActive=\\\"active\\\">presentation</a>  </div>\\n  <div class=\\\"col\\\">\\n    <a routerLink=\\\"/presentationTheme\\\" routerLinkActive=\\\"active\\\">presentation Theme</a>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PresentationThemeComponent } from './presentation-theme/presentation-theme.component';\nimport { PresentationComponent } from './presentation/presentation.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { AlertModule } from 'ngx-bootstrap';\nimport {MatTableModule} from '@angular/material/table';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\n\n\nconst appRoutes: Routes = [\n  {path: 'presentation', component: PresentationComponent},\n  {path: 'presentationTheme', component: PresentationThemeComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PresentationThemeComponent,\n    PresentationComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    AlertModule.forRoot(),\n    MatTableModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {User} from \"./User\";\n\nexport class PresentationTheme {\n  id?: string;\n  title: string;\n  description: string;\n  creator?: User;\n}\n","module.exports = \"table {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJlc2VudGF0aW9uLXRoZW1lL3ByZXNlbnRhdGlvbi10aGVtZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvcHJlc2VudGF0aW9uLXRoZW1lL3ByZXNlbnRhdGlvbi10aGVtZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","module.exports = \"<!--<div>\\n  <div>\\n    List\\n  </div>\\n  <div>\\n    <ul *ngFor=\\\"let pt of presentationThemes\\\">\\n      <li>\\n        <span>{{pt.id}}</span>\\n        <span> - {{pt.title}}</span>\\n        <span> - {{pt.description}}</span>\\n      </li>\\n    </ul>\\n  </div>\\n</div>-->\\n\\n<table mat-table [dataSource]=\\\"presentationThemes\\\">\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"title\\\">\\n    <th mat-header-cell *matHeaderCellDef>Title</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{element.title}}</td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"description\\\">\\n    <th mat-header-cell *matHeaderCellDef>Description</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"action\\\">\\n    <th mat-header-cell *matHeaderCellDef> Action </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <button mat-button (click)=\\\"deleteTheme(element)\\\">\\n        <i class=\\\"material-icons\\\">\\n        delete_outline\\n      </i>\\n      </button>\\n      <button mat-button>\\n        <i class=\\\"material-icons\\\">\\n          edit\\n        </i>\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<br/>\\n\\n<form>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" name=\\\"title\\\" [(ngModel)]=\\\"selectedTheme.title\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Description\\\" name=\\\"description\\\" [(ngModel)]=\\\"selectedTheme.description\\\">\\n  </mat-form-field>\\n</form>\\n<button (click)=\\\"addTheme()\\\">add</button>\\n\\n\"","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {PresentationTheme} from \"../models/PresentationTheme\";\nimport {PresentationThemeServiceService} from \"../providers/presentation-theme-service.service\";\n\n@Component({\n  selector: 'app-presentation-theme',\n  templateUrl: './presentation-theme.component.html',\n  styleUrls: ['./presentation-theme.component.css']\n})\nexport class PresentationThemeComponent implements OnInit {\n\n  presentationThemes: PresentationTheme[];\n  selectedTheme: PresentationTheme;\n  displayedColumns: string[] = ['id', 'title', 'description', 'action'];\n\n\n  constructor(private presentationThemeService: PresentationThemeServiceService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.selectedTheme = new PresentationTheme();\n    this.presentationThemes = [];\n    this.presentationThemeService.loadData().subscribe(d => this.presentationThemes = d);\n  }\n\n  addTheme(){\n    this.selectedTheme.creator = null;\n    this.presentationThemeService.addData(this.selectedTheme).subscribe(d => this.presentationThemes.push(d));\n  }\n\n  deleteTheme(el){\n    let index = this.presentationThemes.findIndex(e => e.id === el.id);\n    this.presentationThemes.splice(index, index +1);\n    console.log(el)\n\n    this.presentationThemeService.deleteData(el).subscribe();\n  }\n\n  editTheme(){\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZXNlbnRhdGlvbi9wcmVzZW50YXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  presentation works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-presentation',\n  templateUrl: './presentation.component.html',\n  styleUrls: ['./presentation.component.css']\n})\nexport class PresentationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {observable, Observable} from \"rxjs\";\nimport {PresentationTheme} from \"../models/PresentationTheme\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin':  '*',\n    'Access-Control-Allow-Credentials': 'true'\n})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresentationThemeServiceService {\n  appUrl = 'http://localhost:1222/rest/presentationTheme/';\n  constructor(private http: HttpClient) { }\n\n  loadData(): Observable<any> {\n    return this.http.get(this.appUrl, httpOptions).pipe();\n  }\n\n  addData(data: PresentationTheme): Observable<PresentationTheme>{\n    return this.http.post<PresentationTheme>(this.appUrl, data, httpOptions);\n  }\n\n  updateData(data: PresentationTheme): Observable<PresentationTheme>{\n    return this.http.put<PresentationTheme>(this.appUrl+\"/\"+data.id, data, httpOptions);\n  }\n\n  deleteData(data: PresentationTheme): Observable<any>{\n    // return this.http.delete<any>(this.appUrl+\"/\"+data.id, httpOptions);\n    return this.http.request('DELETE', this.appUrl+\"/\"+data.id);\n    // (this.appUrl+\"/\"+data.id, httpOptions);\n  }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}